# 开始符
CompUnit    ::= FuncDef;

# 函数定义与返回类型
FuncDef     ::= Type Ident "(" ParamList ")" Block;

# 函数参数列表定义
ParamList	::= /* empty */ | Param | ParamList ',' Param
Param       ::= Type Ident; 
Type        ::= "int" | "void" ;

# 块
Block       ::= "{" Stmt* "}";

# 语句
Stmt        ::= "return" Expr ";";
#[[ Expr        ::= Number | Ident ; ]]
Expr        ::= LOrExpr;

# 以下优先级从高到低
# https://zh.cppreference.com/w/c/language/operator_precedence
PrimaryExpr  ::= "(" LOrExpr ")" | Number | Ident;
## 2 一元表达式
UnaryExpr    ::= PrimaryExpr | UnaryOp UnaryExpr;
UnaryOp      ::= "+" | "-" | "!";
## 3 乘，除，取余表达式
L3Expr       ::= UnaryExpr | L3Expr L3Op UnaryExpr;
L3Op		 ::= "*" | "/" | "%"
## 4 加, 减表达式
L4Expr 		 ::= L3Expr | L4Expr L4Op L3Expr;
L4Op		 ::= "+" | "-"
## 6 
L6Expr		::= L4Expr | L6Expr L6Op L4Expr;
L6Op		::= "<" | ">" | "<=" | ">="
## 7
L7Expr      ::= L6Expr | L7Expr L7Op L6Expr;
L7Op		::= "==" | "!="
## 8
LAndExpr	::= L7Expr | LAndExpr LAndOp L7Expr;
LAndOp		::= "&&"
## 9
LOrExpr		::= LAndExpr | LOrExpr LOrOp LAndExpr;
LOrOp		::= "||"

Number      ::= INT_LITERAL;
Ident       ::= [a-zA-Z_][0-9a-zA-Z_]*;

